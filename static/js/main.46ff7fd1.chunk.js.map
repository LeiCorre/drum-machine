{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["DrumMachine","props","state","view","onKey","bind","qKey","wKey","eKey","aKey","sKey","dKey","zKey","xKey","cKey","document","addEventListener","this","getElementById","removeEventListener","event","keyCode","play","setState","className","id","src","React","Component","ReactDOM","render","Boolean","window","location","hostname","match","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+OAMMA,G,8DACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,KAAM,IAIR,EAAKC,MAAQ,EAAKA,MAAMC,KAAX,gBACb,EAAKC,KAAO,EAAKA,KAAKD,KAAV,gBACZ,EAAKE,KAAO,EAAKA,KAAKF,KAAV,gBACZ,EAAKG,KAAO,EAAKA,KAAKH,KAAV,gBACZ,EAAKI,KAAO,EAAKA,KAAKJ,KAAV,gBACZ,EAAKK,KAAO,EAAKA,KAAKL,KAAV,gBACZ,EAAKM,KAAO,EAAKA,KAAKN,KAAV,gBACZ,EAAKO,KAAO,EAAKA,KAAKP,KAAV,gBACZ,EAAKQ,KAAO,EAAKA,KAAKR,KAAV,gBACZ,EAAKS,KAAO,EAAKA,KAAKT,KAAV,gBAhBK,E,gEAsBjBU,SAASC,iBAAiB,UAAWC,KAAKb,OAC1CW,SAASG,eAAe,SAASF,iBAAiB,QAASC,KAAKX,MAChES,SAASG,eAAe,SAASF,iBAAiB,QAASC,KAAKV,MAChEQ,SAASG,eAAe,SAASF,iBAAiB,QAASC,KAAKT,MAChEO,SAASG,eAAe,SAASF,iBAAiB,QAASC,KAAKR,MAChEM,SAASG,eAAe,SAASF,iBAAiB,QAASC,KAAKP,MAChEK,SAASG,eAAe,SAASF,iBAAiB,QAASC,KAAKN,MAChEI,SAASG,eAAe,SAASF,iBAAiB,QAASC,KAAKL,MAChEG,SAASG,eAAe,SAASF,iBAAiB,QAASC,KAAKJ,MAChEE,SAASG,eAAe,SAASF,iBAAiB,QAASC,KAAKH,Q,6CAIhEC,SAASI,oBAAoB,UAAWF,KAAKb,OAC7CW,SAASG,eAAe,SAASF,iBAAiB,QAASC,KAAKX,MAChES,SAASG,eAAe,SAASF,iBAAiB,QAASC,KAAKV,MAChEQ,SAASG,eAAe,SAASF,iBAAiB,QAASC,KAAKT,MAChEO,SAASG,eAAe,SAASF,iBAAiB,QAASC,KAAKR,MAChEM,SAASG,eAAe,SAASF,iBAAiB,QAASC,KAAKP,MAChEK,SAASG,eAAe,SAASF,iBAAiB,QAASC,KAAKN,MAChEI,SAASG,eAAe,SAASF,iBAAiB,QAASC,KAAKL,MAChEG,SAASG,eAAe,SAASF,iBAAiB,QAASC,KAAKJ,MAChEE,SAASG,eAAe,SAASF,iBAAiB,QAASC,KAAKH,Q,4BAM5DM,GACJ,OAAQA,EAAMC,SACZ,QACE,MACF,KAAK,GACHJ,KAAKX,OACL,MACF,KAAK,GACDW,KAAKV,OACL,MACJ,KAAK,GACDU,KAAKT,OACL,MACJ,KAAK,GACDS,KAAKR,OACL,MACJ,KAAK,GACDQ,KAAKP,OACL,MACJ,KAAK,GACDO,KAAKN,OACL,MACJ,KAAK,GACDM,KAAKL,OACL,MACJ,KAAK,GACDK,KAAKJ,OACL,MACJ,KAAK,GACDI,KAAKH,U,2BAKRM,GACHL,SAASG,eAAe,KAAKI,OAC7BL,KAAKM,SAAS,CACZpB,KAAM,a,6BAIRY,SAASG,eAAe,KAAKI,OAC7BL,KAAKM,SAAS,CACZpB,KAAM,W,6BAKRY,SAASG,eAAe,KAAKI,OAC7BL,KAAKM,SAAS,CACZpB,KAAM,W,6BAKRY,SAASG,eAAe,KAAKI,OAC7BL,KAAKM,SAAS,CACZpB,KAAM,a,6BAMRY,SAASG,eAAe,KAAKI,OAC7BL,KAAKM,SAAS,CACZpB,KAAM,U,6BAKRY,SAASG,eAAe,KAAKI,OAC7BL,KAAKM,SAAS,CACZpB,KAAK,U,6BAKPY,SAASG,eAAe,KAAKI,OAC7BL,KAAKM,SAAS,CACZpB,KAAM,c,6BAKRY,SAASG,eAAe,KAAKI,OAC7BL,KAAKM,SAAS,CACZpB,KAAM,W,6BAKRY,SAASG,eAAe,KAAKI,OAC7BL,KAAKM,SAAS,CACZpB,KAAM,U,+BAcR,OACE,yBAAKqB,UAAU,mBACb,yBAAKC,GAAG,gBACN,yBAAKD,UAAU,OAEf,yBAAKC,GAAG,WAAWR,KAAKf,MAAMC,OAE9B,yBAAKqB,UAAU,OACb,4BAAQA,UAAU,iCAAiCC,GAAG,SAAtD,IACE,2BAAOC,IAAI,2DAA2DF,UAAU,OAAOC,GAAG,OAI5F,4BAAQD,UAAU,iCAAiCC,GAAG,SAAtD,IACE,2BAAOC,IAAI,2DAA2DF,UAAU,OAAOC,GAAG,OAI5F,4BAAQD,UAAU,iCAAiCC,GAAG,SAAtD,IACE,2BAAOC,IAAI,2DAA2DF,UAAU,OAAOC,GAAG,QAG9F,yBAAKD,UAAU,OACb,4BAAQA,UAAU,iCAAiCC,GAAG,SAAtD,IACE,2BAAOC,IAAI,6DAA6DF,UAAU,OAAOC,GAAG,OAE9F,4BAAQD,UAAU,iCAAiCC,GAAG,SAAtD,IACE,2BAAOC,IAAI,yDAAyDF,UAAU,OAAOC,GAAG,OAE1F,4BAAQD,UAAU,iCAAiCC,GAAG,SAAtD,IACE,2BAAOC,IAAI,6DAA6DF,UAAU,OAAOC,GAAG,QAGhG,yBAAKD,UAAU,OACb,4BAAQA,UAAU,iCAAiCC,GAAG,SAAtD,IACE,2BAAOC,IAAI,kEAAkEF,UAAU,OAAOC,GAAG,OAEnG,4BAAQD,UAAU,iCAAiCC,GAAG,SAAtD,IACE,2BAAOC,IAAI,yDAAyDF,UAAU,OAAOC,GAAG,OAE1F,4BAAQD,UAAU,iCAAiCC,GAAG,SAAtD,IACE,2BAAOC,IAAI,+DAA+DF,UAAU,OAAOC,GAAG,QAGlG,yBAAKD,UAAU,SAKnB,wBAAIC,GAAG,QAAP,qC,GA/MoBE,IAAMC,YAsNhCC,IAASC,OAAO,kBAAC,EAAD,MAAiBf,SAASG,eAAe,SAE1ClB,QClNK+B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNN,IAASC,OACP,kBAAC,IAAMM,WAAP,KACE,kBAAC,EAAD,OAEFrB,SAASG,eAAe,SDyHpB,kBAAmBmB,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.46ff7fd1.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom'\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nclass DrumMachine extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      view: \"\"      \n    }\n    \n    \n    this.onKey = this.onKey.bind(this);\n    this.qKey = this.qKey.bind(this);\n    this.wKey = this.wKey.bind(this)\n    this.eKey = this.eKey.bind(this)\n    this.aKey = this.aKey.bind(this)\n    this.sKey = this.sKey.bind(this)\n    this.dKey = this.dKey.bind(this)\n    this.zKey = this.zKey.bind(this)\n    this.xKey = this.xKey.bind(this)\n    this.cKey = this.cKey.bind(this)\n    \n    \n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.onKey);\n    document.getElementById(\"qCont\").addEventListener('click', this.qKey)\n    document.getElementById(\"wCont\").addEventListener('click', this.wKey)\n    document.getElementById(\"eCont\").addEventListener('click', this.eKey)\n    document.getElementById(\"aCont\").addEventListener('click', this.aKey)\n    document.getElementById(\"sCont\").addEventListener('click', this.sKey)\n    document.getElementById(\"dCont\").addEventListener('click', this.dKey)\n    document.getElementById(\"zCont\").addEventListener('click', this.zKey)\n    document.getElementById(\"xCont\").addEventListener('click', this.xKey)\n    document.getElementById(\"cCont\").addEventListener('click', this.cKey)\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.onKey)\n    document.getElementById(\"qCont\").addEventListener('click', this.qKey)\n    document.getElementById(\"wCont\").addEventListener('click', this.wKey)\n    document.getElementById(\"eCont\").addEventListener('click', this.eKey)\n    document.getElementById(\"aCont\").addEventListener('click', this.aKey)\n    document.getElementById(\"sCont\").addEventListener('click', this.sKey)\n    document.getElementById(\"dCont\").addEventListener('click', this.dKey)\n    document.getElementById(\"zCont\").addEventListener('click', this.zKey)\n    document.getElementById(\"xCont\").addEventListener('click', this.xKey)\n    document.getElementById(\"cCont\").addEventListener('click', this.cKey)\n  }\n\n  \n  \n\n  onKey(event) {\n    switch (event.keyCode) {\n      default: \n        break;\n      case 81: \n        this.qKey();\n        break;\n      case 87:\n          this.wKey()\n          break;\n      case 69:\n          this.eKey()\n          break;\n      case 65:\n          this.aKey()\n          break;\n      case 83:\n          this.sKey();\n          break;\n      case 68: \n          this.dKey();\n          break;\n      case 90:\n          this.zKey();        \n          break;\n      case 88:\n          this.xKey();\n          break;\n      case 67:\n          this.cKey();\n          break;  \n    }\n  }\n\n  qKey(event) {\n    document.getElementById('Q').play()\n    this.setState({\n      view: \"Groove\"\n    })\n  }\n  wKey() {\n    document.getElementById('W').play()\n    this.setState({\n      view: \"Move\"\n    })\n  }\n\n  eKey() {\n    document.getElementById('E').play()\n    this.setState({\n      view: \"Clap\"\n    })\n  }\n\n  aKey() {\n    document.getElementById('A').play()\n    this.setState({\n      view: \"Cymbal\"\n    })\n  }\n  \n\n  sKey() {\n    document.getElementById('S').play()\n    this.setState({\n      view: \"Tip\"\n    })\n  }\n\n  dKey() {\n    document.getElementById('D').play()\n    this.setState({\n      view:\"Tap\"\n    })\n  }\n\n  zKey() {\n    document.getElementById('Z').play()\n    this.setState({\n      view: \"Skitter\"\n    })\n  }\n \n  xKey() {\n    document.getElementById('X').play()\n    this.setState({\n      view: \"Cuff\"\n    })\n  }\n\n  cKey() {\n    document.getElementById('C').play()\n    this.setState({\n      view: \"Zap\"\n    })\n  }\n\n\n\n \n  \n\n  \n \n    \n  \n  render() {\n    return (\n      <div className=\"container-fluid\">\n        <div id=\"drum-machine\">\n          <div className=\"row\">\n            \n          <div id=\"display\">{this.state.view}</div>\n          </div>\n          <div className=\"row\">\n            <button className=\"drum-pad col-xs-3 btn btn-dark\" id=\"qCont\">Q\n              <audio src=\"https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3\" className=\"clip\" id=\"Q\" />\n              \n            </button>\n            \n            <button className=\"drum-pad col-xs-3 btn btn-info\" id=\"wCont\">W\n              <audio src='https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3' className=\"clip\" id=\"W\" />\n            \n\n            </button>\n            <button className=\"drum-pad col-xs-3 btn btn-dark\" id=\"eCont\">E\n              <audio src='https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3' className='clip' id='E' />\n            </button>\n          </div>\n          <div className=\"row\">\n            <button className=\"drum-pad col-xs-3 btn btn-info\" id=\"aCont\">A\n              <audio src='https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3' className='clip' id='A' />\n              </button>\n            <button className=\"drum-pad col-xs-3 btn btn-dark\" id=\"sCont\">S\n              <audio src='https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3' className='clip' id='S' />\n            </button>\n            <button className=\"drum-pad col-xs-3 btn btn-info\" id=\"dCont\">D\n              <audio src='https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3' className='clip' id=\"D\" />\n            </button>\n          </div>\n          <div className=\"row\">\n            <button className=\"drum-pad col-xs-3 btn btn-dark\" id=\"zCont\">Z\n              <audio src='https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3' className='clip' id='Z' />\n            </button>\n            <button className=\"drum-pad col-xs-3 btn btn-info\" id=\"xCont\">X\n              <audio src='https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3' className='clip' id='X' />\n            </button>\n            <button className=\"drum-pad col-xs-3 btn btn-dark\" id=\"cCont\">C\n              <audio src='https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3' className=\"clip\" id='C' />\n            </button>\n          </div>\n          <div className=\"row\">\n          \n          </div>\n        </div>\n\n      <h3 id='foot'>Designed by Lei Corre &hearts;</h3>\n\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<DrumMachine />, document.getElementById('root'))\n\nexport default DrumMachine;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}